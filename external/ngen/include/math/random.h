//
// Copyright 2016 nfactorial
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

#if !defined(NGEN_IRANDOM_HEADER_INCLUDED_NFACTORIAL)
#define NGEN_IRANDOM_HEADER_INCLUDED_NFACTORIAL

namespace ngen {
    //! \brief This interface declares an object that is used to provide a randomized number.
    struct IRandom {
        //! \brief Retrieves the seed for the next random value that will be generated.
        //! \returns The seed for the next random value to be generated by the object.
        virtual uint64_t getSeed() = 0;

        //! \\brief Sets the seed value that is to be used to generate the next random value.
        //! \param seed - The seed value to be used for the next random value that is generated by the object.
        virtual void setSeed(uint64_t seed) = 0;

        //! \brief Generates a random integer value.
        //! \returns The next random integer value.
        virtual int32_t nextInt() = 0;

        //! \brief Generates a random unsigned integer value.
        //! \returns The next random unsigned integer value.
        virtual uint32_t nextUInt() = 0;

        //! \brief Generates a random floating point value between 0 and 1.
        //! \returns The next random floating point value.
        virtual float nextFloat() = 0;
    };
}

#endif //!defined(NGEN_IRANDOM_HEADER_INCLUDED_NFACTORIAL)
